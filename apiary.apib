FORMAT: 1A
HOST: https://apprenticeship-scorecard-api.herokuapp.com/

# Apprenticeship Scorecard

API to access data on UK apprenticeships and providers

## Providers Collection [/providers]

### Retrieve details about a provider [GET /providers/{UKPRN}]

+ Parameters
    + UKPRN: 10000201 (number) - ID of the provider

+ Response 200 (application/json)

        {
            "ukprn": 10000201,
            "name": "ALDER TRAINING LIMITED",
            "provider_type": "Private Sector Public Funded",
            "region": "North West",
            "lea": "Liverpool",
            "la": "Liverpool",
            "address": {
                "address1": "Alder House",
                "address2": "Central Drive",
                "town": "LIVERPOOL",
                "county": "Merseyside",
                "post_code": "L12 2AR",
                "latitude": 53.423893,
                "longitude": -2.904466
            },
            "website": "http://www.aldertraining.co.uk"
        }
        
### List and filter providers [GET /providers{?query}{?fields}{?sort_by}{?reverse}{?max_results}{?page_size}{?page_number}]

List all (by default) providers in the data set. The results will be paged. The page size and page number can be set by the relevant optional parameters and the total number of results that are selected can be limited by the optional `max_results` parameter.

You can use a query to select results that match specific conditions. The query language is simple, but quite powerful. You can reference fields from the json result using dotted paths (e.g. `description` or `learner_stats.satisfaction`), compare strings (`=`, `!=`, `starts with`, `ends with` and `contains`) and compare numbers `=`, `!=`, `>`, `<`, `>=` and `<=`). Here are some examples:

+ Parameters
    + query: "learner_stats.total > 200" (string, optional) - a query expression that will be used to filter the list of providers
    + fields: ["stats.success_rate", "national_stats.success_rate"] (array of string, optional) - an array of paths referencing fields that should be included in the json output.
    + sort_by: "stats.success_rate" (string, optional) - a path identifying the field the results should be sorted by.
    + reverse: true (boolean, optional) - if `true` then the list of results will be reversed.
    + max_results: 500 (number, optional) - limit the number of apprenticeships that are selected. If note specified then all matching results will be selected.
    + page_size (number, optional) - limit the number of apprenticeships that are returned in a page
        + Default: 50
    + page_number (number, optional) - the page number to return
        + Default: 1
        
+ Response 200 (application/json)

        [
            {
                "subject_tier_2_code": 15.2,
                "subject_tier_2_title": "Administration",
                "learner_stats": {},
                "description": "Administration",
                "provider_id": 10000201,
                "stats": {
                    "success_rate": 78.7
                },
                "national_stats": {
                    "success_rate": 72.1
                },
                "earnings": {},
                "national_earnings": {},
                "average_cost": 0
            },
            {
                "subject_tier_2_code": 0,
                "subject_tier_2_title": "All",
                "learner_stats": {
                    "satisfaction": 9.5,
                    "national_satisfaction": 8.6,
                    "age_under_19": 170,
                    "age_19_to_24": 320,
                    "age_25_plus": 650,
                    "total": 1140
                },
                "description": "All",
                "provider_id": 10000201,
                "stats": {
                    "success_rate": 81.7
                },
                "national_stats": {
                    "success_rate": 68.9
                },
                "earnings": {
                    "median": 19200,
                    "proportion_above_21k": 0.32
                },
                "national_earnings": {
                    "median": 18300,
                    "proportion_above_21k": 0.35
                },
                "average_cost": 0
            }
        ]

### Search the set of providers [GET /providers/search{?phrase}{?query}{?fields}{?sort_by}{?reverse}{?max_results}{?page_size}{?page_number}]

Search the set of providers using one or more words. The results will include providers that match *all* the words in the phrase.

The matching is carried out as follows:

* A word in the phrase can match the start of or all of a word in the name of the provider, or in the subject description of any apprenticeship course that the provider offers
* A word in the phrase exactly matches the subject code (e.g. "15.1") of any apprenticeship course that the provider offers
 
Each result will have a "search rank" associated with it that indicates how close a match it was. Results will be sorted by highest rank first.

The search also supports the querying and field-extraction features of the "[GET /providers]" endpoint.

+ Parameters
    + phrase: "acc music" (string, optional) - a string of one ore more words, space separated, that will be used to match against providers
    + query: learner_stats.total > 200 (string, optional) - a query expression that will be used to filter the list of providers
    + fields: ["stats.success_rate", "national_stats.success_rate"] (string, optional) - an array of paths referencing fields that should be included in the json output.
    + sort_by: "stats.success_rate" (string, optional) - a path identifying the field the results should be sorted by.
    + reverse: true (boolean, optional) - if `true` then the list of results will be reversed.
    + max_results: 500 (number, optional) - limit the number of apprenticeships that are selected. If note specified then all matching results will be selected.
    + page_size (number, optional) - limit the number of apprenticeships that are returned in a page
        + Default: 50
    + page_number (number, optional) - the page number to return
        + Default: 1
        
+ Response 200 (application/json)

        {
            "results": [
                {
                    "ukprn": 10000080,
                    "name": "ACCESS TO MUSIC LIMITED",
                    "provider_type": "Private Sector Public Funded",
                    "region": "West Midlands",
                    "lea": "Birmingham",
                    "la": "Birmingham",
                    "address": {
                        "address1": "9 centres across the UK",
                        "town": "Birmingham",
                        "post_code": "B9 4AR",
                        "latitude": 52.476623,
                        "longitude": -1.88257
                    },
                    "website": "http://www.accesstomusic.ac.uk",
                    "search_rank": 3.5
                }
            ],
            "total_results": 1,
            "page_number": 1,
            "items_per_page": 50
        }
        
### List and filter apprenticeships for a providers [GET /providers/{UKPRN}/apprenticeships{?query}]

List the apprenticeships assocaited with a given provider, identified by the UKPRN. The list can be filtered using the query parameter.

+ Parameters
    + UKPRN: 10000201 (number) - the id of the provider
    + query: learner_stats.total > 200 (string, optional) - a query expression that will be used to filter the list of apprenticeships

+ Response 200 (application/json)

        [
            {
                "subject_tier_2_code": 15.2,
                "subject_tier_2_title": "Administration",
                "learner_stats": {},
                "description": "Administration",
                "provider_id": 10000201,
                "stats": {
                    "success_rate": 78.7
                },
                "national_stats": {
                    "success_rate": 72.1
                },
                "earnings": {},
                "national_earnings": {},
                "average_cost": 0
            },
            {
                "subject_tier_2_code": 0,
                "subject_tier_2_title": "All",
                "learner_stats": {
                    "satisfaction": 9.5,
                    "national_satisfaction": 8.6,
                    "age_under_19": 170,
                    "age_19_to_24": 320,
                    "age_25_plus": 650,
                    "total": 1140
                },
                "description": "All",
                "provider_id": 10000201,
                "stats": {
                    "success_rate": 81.7
                },
                "national_stats": {
                    "success_rate": 68.9
                },
                "earnings": {
                    "median": 19200,
                    "proportion_above_21k": 0.32
                },
                "national_earnings": {
                    "median": 18300,
                    "proportion_above_21k": 0.35
                },
                "average_cost": 0
            }
        ]

## Apprenticeships Collection [/apprenticeships]

List all (by default) apprenticeships in the data set. The results will be paged. The page size and page number can be set by the relevant optional parameters and the total number of results that are selected can be limited by the optional `max_results` parameter.

You can use a query to select results that match specific conditions. The query language is simple, but quite powerful. You can reference fields in the json using dotted paths (e.g. `description` or `learner_stats.satisfaction`), compare strings (`=`, `!=`, `starts with`, `ends with` and `contains`) and compare numbers `=`, `!=`, `>`, `<`, `>=` and `<=`). Here are some examples:

* `stats.success_rate > 60`
* `description starts with "accounting"` - string comparisons are case-insensitive
* `stats.success_rate > national_stats.success_rate and earnings.median > 15000`

Be aware that if you use a path that doesn't match in a particular result object then that part of the query will come out as `false`. This is a convenient way to select only results that have a certain field defined.

### List and filter apprenticeships [GET /apprenticeships{?query}{?fields}{?sort_by}{?reverse}{?max_results}{?page_size}{?page_number}]

+ Parameters
    + query: learner_stats.total > 200 (string, optional) - a query expression that will be used to filter the list of apprenticeships
    + max_results: 500 (number, optional) - limit the number of apprenticeships that are selected. If note specified then all matching results will be selected.
    + page_size (number, optional) - limit the number of apprenticeships that are returned in a page
        + Default: 50
    + page_number (number, optional) - the page number to return
        + Default: 1

+ Response 200 (application/json)

        {
            "results": [
                {
                    "subject_tier_2_code": 0,
                    "subject_tier_2_title": "All",
                    "learner_stats": {
                        "satisfaction": 9.1,
                        "national_satisfaction": 8.6,
                        "age_under_19": 10,
                        "age_19_to_24": 40,
                        "age_25_plus": 110,
                        "total": 160
                    },
                    "description": "All",
                    "provider_id": 10000020,
                    "stats": {
                        "success_rate": 84.2
                    },
                    "national_stats": {
                        "success_rate": 68.9
                    },
                    "earnings": {},
                    "national_earnings": {},
                    "average_cost": 0
                },
                {
                    "subject_tier_2_code": 15.1,
                    "subject_tier_2_title": "Accounting and Finance",
                    "learner_stats": {},
                    "description": "Accounting and Finance",
                    "provider_id": 10000060,
                    "stats": {
                        "success_rate": 90.3
                    },
                    "national_stats": {
                        "success_rate": 76.1
                    },
                    "earnings": {
                        "median": 18700,
                        "proportion_above_21k": 0.33
                    },
                    "national_earnings": {
                        "median": 19100,
                        "proportion_above_21k": 0.34
                    },
                    "average_cost": 0
                }
            ],
            "result_count": 2,
            "page_number": 1,
            "page_size": 50
        }

### List, filter and extract fields from apprenticeships [POST /apprenticeships]

The POST endpoint supports the same parameters as the GET endpoint, but enclosed in a json object rather than being query parameters. In addition, it supports a `fields` parameter that lets you select which fields of the selected objects should be returned in the results. This is a json array of strings, each of which is a path into the json (e.g. `earnings` or `national_earnings.median`. If, for a specific object in the result set, a given path is empty or missing then it will be excluded from the result object. If a result object is empty, because none of the paths match, then it will be excluded from the result set.

Duplicates are removed from the result set. So if, for example, you specify `"fields" : [ "subject_tier_2_code" ]` then you would see only one result object for each unique value of `subject_tier_2_code`.

+ Request (application/json)

        {
            "fields": [
                "earnings",
                "national_earnings"
            ],
            "sort_by": "earnings.median",d
            "max_results": 500,
            "page_number": 2,
            "page_size": 10,
            "query": "earnings.median > 0"
        }

        All fields in the request body are optional, but at the very least you must provide an empty json object (`{}`).


+ Response 200 (application/json)

            {
                "results": [
                    {
                        "subject_tier_2_code": 0,
                        "subject_tier_2_title": "All",
                        "learner_stats": {
                            "satisfaction": 9.1,
                            "national_satisfaction": 8.6,
                            "age_under_19": 10,
                            "age_19_to_24": 40,
                            "age_25_plus": 110,
                            "total": 160
                        },
                        "description": "All",
                        "provider_id": 10000020,
                        "stats": {
                            "success_rate": 84.2
                        },
                        "national_stats": {
                            "success_rate": 68.9
                        },
                        "earnings": {},
                        "national_earnings": {},
                        "average_cost": 0
                    },
                    {
                        "subject_tier_2_code": 15.1,
                        "subject_tier_2_title": "Accounting and Finance",
                        "learner_stats": {},
                        "description": "Accounting and Finance",
                        "provider_id": 10000060,
                        "stats": {
                            "success_rate": 90.3
                        },
                        "national_stats": {
                            "success_rate": 76.1
                        },
                        "earnings": {
                            "median": 18700,
                            "proportion_above_21k": 0.33
                        },
                        "national_earnings": {
                            "median": 19100,
                            "proportion_above_21k": 0.34
                        },
                        "average_cost": 0
                    }
                ],
                "result_count": 2,
                "page_number": 1,
                "page_size": 50
            }